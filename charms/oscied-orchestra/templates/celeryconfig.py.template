#!/usr/bin/env python
# -*- coding: utf-8 -*-

#**************************************************************************************************#
#              OPEN-SOURCE CLOUD INFRASTRUCTURE FOR ENCODING AND DISTRIBUTION : ORCHESTRA
#
#  Authors   : David Fischer
#  Contact   : david.fischer.ch@gmail.com / david.fischer@hesge.ch
#  Project   : OSCIED (OS Cloud Infrastructure for Encoding and Distribution)
#  Copyright : 2012-2013 OSCIED Team. All rights reserved.
#**************************************************************************************************#
#
# This file is part of EBU/UER OSCIED Project.
#
# This project is free software: you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This project is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this project.
# If not, see <http://www.gnu.org/licenses/>
#
# Retrieved from https://github.com/EBU-TI/OSCIED

import sys
from kombu import Queue

sys.path.append('.')

BROKER_URL = '{rabbit}'
CELERY_RESULT_BACKEND = 'mongodb'
CELERY_MONGODB_BACKEND_SETTINGS = {{
    'host': '127.0.0.1',
    'port': '{port}',
    'user': '{username}',
    'password': '{password}',
    'database': 'celery',
    'taskmeta_collection': 'taskmeta',
}}

#class OrchestraRouter(object):
#
#    def route_for_task(self, task, args=None, kwargs=None):
#        return {{'exchange': '/',
#                'exchange_type': 'topic',
#                'queue': 'transform_new',
#                'routing_key': 'transform.new'}}

#CELERY_ROUTES = (OrchestraRouter(), )
CELERY_QUEUES = (
    Queue('black_hole',        routing_key='blackhole'),
    Queue('transform_private', routing_key='transform.private'),
    Queue('transform_amazon',  routing_key='transform.amazon'),
    Queue('publisher_private', routing_key='publisher.private'),
    Queue('publisher_amazon',  routing_key='publisher.amazon'),
)
CELERY_CREATE_MISSING_QUEUES = True
CELERY_DEFAULT_QUEUE = 'black_hole'
CELERY_DEFAULT_EXCHANGE = '/'
CELERY_DEFAULT_EXCHANGE_TYPE = 'topic'

CELERY_IMPORTS = ('oscied_lib.Transform', 'oscied_lib.Publisher',)
CELERY_IGNORE_RESULT = False
CELERY_SEND_EVENTS = True
CELERY_TASK_SERIALIZER = 'json'
CELERY_TASK_COMPRESSION = 'zlib'
CELERY_TRACK_STARTED = True
