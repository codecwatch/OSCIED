#!/usr/bin/env bash

#**************************************************************************************************#
#              OPEN-SOURCE CLOUD INFRASTRUCTURE FOR ENCODING AND DISTRIBUTION : STORAGE
#
#  Authors   : David Fischer
#  Contact   : david.fischer.ch@gmail.com / david.fischer@hesge.ch
#  Project   : OSCIED (OS Cloud Infrastructure for Encoding and Distribution)
#  Copyright : 2012 OSCIED Team. All rights reserved.
#**************************************************************************************************#
#
# This file is part of EBU/UER OSCIED Project.
#
# This project is free software: you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This project is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this project.
# If not, see <http://www.gnu.org/licenses/>
#
# Retrieved from:
#   svn co https://claire-et-david.dyndns.org/prog/OSCIED

set -o nounset # will exit if an unitialized variable is used

# Constants ========================================================================================

ECHO='juju-log' # Used by logicielsUbuntuUtils
MEDIAS_VOLUME='medias_volume'
MEDIAS_BRICK='exp1'

# Configuration ====================================================================================

if [ "$(config-get verbose)" = 'true' ] ; then
  VERBOSE=0     # true
  set -o xtrace # for verbose logging to juju debug-log
else
  VERBOSE=1 # false
fi

# Utilities ========================================================================================

# HOOKS : Charm Setup ==============================================================================

hook_install()
{
  techo ' Storage - install'

  apt-add-repository -y ppa:charmers/charm-helpers || \
    xecho 'Unable to add charms helpers repository' 1

  eval $update
  eval $upgrade

  pecho 'Install and configure Network Time Protocol'
  eval $install ntp || xecho 'Unable to install ntp' 2
  eval $service ntp restart || xecho 'Unable to restart ntp service' 3

  pecho 'Install Charms helpers and GlusterFS Server'
  eval $install charm-helper-sh glusterfs-server nfs-common || xecho 'Unable to install packages' 4

  pecho "Create medias volume $MEDIAS_VOLUME"
  ip=$(unit-get private-address)
  gluster volume create "$MEDIAS_VOLUME" "$ip:/$MEDIAS_BRICK" || \
    xecho "Unable to create medias volume $MEDIAS_VOLUME on brick $ip:/$MEDIAS_BRICK" 5

  gluster volume start "$MEDIAS_VOLUME" || xecho "Unable to start volume $MEDIAS_VOLUME" 6
  gluster volume info

  juju-log 'Expose GlusterFS Server service'
  open-port 111/tcp    #  is used for portmapper, and should have both TCP and UDP open
  open-port 24007/tcp  # for the Gluster Daemon
  #open-port 24008/tcp # Infiniband management (optional unless you are using IB)
  open-port 24009/tcp  # We have only 1 storage brick (24009-24009)
  # For NFS (not used)
  #open-port 38465/tcp
  #open-port 38466/tcp
  #open-port 38467/tcp
}

hook_uninstall()
{
  techo 'Storage - uninstall'

  hook_stop

  eval $purge glusterfs-server nfs-common
  eval $autoremove
}

# HOOKS : Charm Service ============================================================================

hook_start()
{
  techo 'Storage - start'

  if ! service glusterfs-server status | grep -q 'running'; then
    service glusterfs-server start || xecho 'Unable to start GlusterFS Server' 1
  fi
}

hook_stop()
{
  techo 'Storage - stop'

  if service glusterfs-server status | grep -q 'running'; then
    service glusterfs-server stop || xecho 'Unable to stop GlusterFS Server' 1
  fi
}

# HOOKS : Provides Storage =========================================================================

hook_storage_relation_joined()
{
  techo 'Storage - storage relation joined'

  # Send filesystem type, mount point & options
  relation-set fstype='glusterfs' mountpoint="$MEDIAS_VOLUME" options=''
}
